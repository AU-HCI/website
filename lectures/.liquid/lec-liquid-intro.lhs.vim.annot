15:1-15:9::LectLiquid.notEmpty :: "x1:[a] -> {VV : GHC.Types.Bool | Prop VV <=> notEmpty x1}"
15:15-15:20::GHC.Types.False :: "{v : GHC.Types.Bool | v == GHC.Types.False}"
16:18-16:22::GHC.Types.True :: "{v : GHC.Types.Bool | v == GHC.Types.True}"
24:1-24:3::LectLiquid.hd :: "{l : [a] | notEmpty l} -> a"
24:13-24:14::x :: "{VV : a | VV == x}"
28:1-28:4::LectLiquid.ex1 :: "[{l : [GHC.Types.Char] | notEmpty l}] -> [GHC.Types.Char]"
28:5-28:6::l :: "[{l : [GHC.Types.Char] | notEmpty l}]"
28:9-28:15::_ :: "x1:[{v : [GHC.Types.Char] | notEmpty v && notEmpty v && len v >= 0}] -> {v : [GHC.Types.Char] | len v == len x1}"
28:13-28:15::_ :: "{v : [a] | notEmpty v} -> a"
28:16-28:17::l :: "{v : [{v : [GHC.Types.Char] | notEmpty v}] | v == l}"
132:1-132:15::LectLiquid.safeTakeWord16 :: "x1:GHC.Types.Int -> {s : [GHC.Types.Char] | len s >= x1} -> [GHC.Types.Char]"
132:16-132:17::n :: "GHC.Types.Int"
132:18-132:19::s :: "{s : [GHC.Types.Char] | len s >= n}"
132:26-132:27::t :: "Data.Text.Internal.Text"
132:30-132:36::_ :: "[GHC.Types.Char] -> Data.Text.Internal.Text"
132:37-132:38::s :: "{v : [GHC.Types.Char] | v == s}"
133:26-133:30::lq_anf__d3fG :: "Data.Text.Internal.Text -> [GHC.Types.Char]"
133:33-133:46::_ :: "GHC.Types.Int -> Data.Text.Internal.Text -> Data.Text.Internal.Text"
133:47-133:48::n :: "{v : GHC.Types.Int | v == n}"
133:49-133:50::t :: "{v : Data.Text.Internal.Text | v == t}"
141:1-141:4::LectLiquid.ex2 :: "[GHC.Types.Char]"
141:7-141:21::_ :: "x1:GHC.Types.Int -> {v : [GHC.Types.Char] | len v >= x1} -> [GHC.Types.Char]"
141:22-141:23::lq_anf__d3fI :: "GHC.Types.Int"
141:24-141:32::lq_anf__d3fK :: "[GHC.Types.Char]"